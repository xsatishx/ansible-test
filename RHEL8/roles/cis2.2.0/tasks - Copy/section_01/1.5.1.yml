---

###############
#    Audit    #
###############

- name: 1.5.1|task01
  stat:
    path: /etc/security/limits.conf
  register: task01
  when: is_compliance or is_remediate

- name: 1.5.1|task02
  shell: egrep "^\*\s+hard\s+core\s+0" /etc/security/limits.conf /etc/security/limits.d/* | /usr/bin/awk '{print} END {if (NR == 0) print "failed"}'
  args:
    warn: no
  check_mode: no
  changed_when: no
  failed_when: no
  register: task02
  when: is_compliance

- name: 1.5.1|task03
  shell: (/usr/sbin/sysctl fs.suid_dumpable) | egrep "^\s*fs\.suid_dumpable\s*="
  args:
    warn: no
  check_mode: no
  changed_when: no
  failed_when: no
  register: task03
  when: is_compliance

- name: 1.5.1|task03
  set_fact:
    is_valid01: '{{ task03.stdout_lines | select("match", "^.*fs\.suid_dumpable\s*=\s*0\s*$") | list | length > 0 }}'
  when: is_compliance

- name: 1.5.1|task04
  shell: egrep "^fs\.suid_dumpable\s*=" /etc/sysctl.conf /etc/sysctl.d/*
  args:
    warn: no
  check_mode: no
  changed_when: no
  failed_when: no
  register: task04
  when: is_compliance

- name: 1.5.1|task04
  set_fact:
    is_valid02: '{{ task04.stdout_lines | select("match", "^.*fs\.suid_dumpable\s*=\s*0") | list | length > 0 }}'
  when: is_compliance

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Run the following commands and verify output matches:
      </pre>
      <pre class="secondary">
      # grep "hard core" /etc/security/limits.conf /etc/security/limits.d/*
      * hard core 0
      # sysctl fs.suid_dumpable
      fs.suid_dumpable = 0
      # grep "fs\.suid_dumpable" /etc/sysctl.conf /etc/sysctl.d/*
      fs.suid_dumpable = 0
      </pre>
    cmd_output: |
      <pre class="primary">
      <b>Command executed:</b>
      </pre>
      <pre class="secondary">
      grep "hard core" /etc/security/limits.conf /etc/security/limits.d/*
      </pre>
      <pre class="primary">
      <b>Output:</b>
      </pre>
      <pre class="secondary">
      {{ task02.stdout_lines | difference(["failed"]) | default(["&lt;no-output&gt;"], true) | join('<br>')}}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'failed' if 'failed' in task02.stdout_lines else 'passed' }}"
  when: is_compliance
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Run the following commands and verify output matches:
      </pre>
      <pre class="secondary">
      # grep "hard core" /etc/security/limits.conf /etc/security/limits.d/*
      * hard core 0
      # sysctl fs.suid_dumpable
      fs.suid_dumpable = 0
      # grep "fs\.suid_dumpable" /etc/sysctl.conf /etc/sysctl.d/*
      fs.suid_dumpable = 0
      </pre>
    cmd_output: |
      <pre class="primary">
      <b>Command executed:</b>
      </pre>
      <pre class="secondary">
      sysctl fs.suid_dumpable
      </pre>
      <pre class="primary">
      <b>Output:</b>
      </pre>
      <pre class="secondary">
      {{ task03.stdout_lines | default(["&lt;no-output&gt;"], true) | join('<br>')}}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'passed' if is_valid01 else 'failed' }}"
  when: is_compliance
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Run the following commands and verify output matches:
      </pre>
      <pre class="secondary">
      # grep "hard core" /etc/security/limits.conf /etc/security/limits.d/*
      * hard core 0
      # sysctl fs.suid_dumpable
      fs.suid_dumpable = 0
      # grep "fs\.suid_dumpable" /etc/sysctl.conf /etc/sysctl.d/*
      fs.suid_dumpable = 0
      </pre>
    cmd_output: |
      <pre class="primary">
      <b>Command executed:</b>
      </pre>
      <pre class="secondary">
      grep "fs\.suid_dumpable" /etc/sysctl.conf /etc/sysctl.d/*
      </pre>
      <pre class="primary">
      <b>Output:</b>
      </pre>
      <pre class="secondary">
      {{ task04.stdout_lines | default(["&lt;no-output&gt;"], true) | join('<br>')}}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'passed' if is_valid02 else 'failed' }}"
  when: is_compliance
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation

###############
# Remediation #
###############

- name: 1.5.1|task05
  lineinfile:
    state: present
    path: /etc/security/limits.conf
    regexp: "^#?\\*.*core"
    line: '* hard core 0\n'
    insertbefore: '^# End of file'
  when:
    - is_remediate
    - not task01.stat.exists
  register: task05

- name: 1.5.1|task06
  pam_limits:
    dest : /etc/security/limits.conf
    limit_item: "core"
    limit_type: "hard"
    domain: "*"
    value: "0"
  when:
    - is_remediate
    - task01.stat.exists
  register: task06

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:
      </pre>
      <pre class="secondary">
      * hard core 0
      </pre>

      <pre class="primary">
      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      </pre>
      <pre class="secondary">
      fs.suid_dumpable = 0
      </pre>

      <pre class="primary">
      Run the following command to set the active kernel parameter:
      </pre>
      <pre class="secondary">
      # sysctl -w fs.suid_dumpable=0
      </pre>
    cmd_output: |
      <pre class="primary">
      Following line added to /etc/security/limits.conf
      </pre>
      <pre class="secondary">
      * hard core 0
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'changed' if task05.changed or task06.changed else 'passed'}}"
  when: is_remediate
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation

- name: 1.5.1|task07
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: yes
    sysctl_set: yes
    ignoreerrors: yes
  register: task07
  when: is_remediate

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:
      </pre>
      <pre class="secondary">
      * hard core 0
      </pre>

      <pre class="primary">
      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      </pre>
      <pre class="secondary">
      fs.suid_dumpable = 0
      </pre>

      <pre class="primary">
      Run the following command to set the active kernel parameter:
      </pre>
      <pre class="secondary">
      # sysctl -w fs.suid_dumpable=0
      </pre>
    cmd_output: |
      <pre class="primary">
      Following line added to /etc/sysctl.conf
      </pre>
      <pre class="secondary">
      fs.suid_dumpable = 0
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'changed' if task07.changed else 'passed'}}"
  when: is_remediate
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:
      </pre>
      <pre class="secondary">
      * hard core 0
      </pre>

      <pre class="primary">
      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      </pre>
      <pre class="secondary">
      fs.suid_dumpable = 0
      </pre>

      <pre class="primary">
      Run the following command to set the active kernel parameter:
      </pre>
      <pre class="secondary">
      # sysctl -w fs.suid_dumpable=0
      </pre>
    cmd_output: |
      <pre class="primary">
      Following command executed successfully
      </pre>
      <pre class="secondary">
      # sysctl -w fs.suid_dumpable=0
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'changed' if task07.changed else 'passed'}}"
  when: is_remediate
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation

- name: 1.5.1|task08
  find:
    paths: /etc/security/limits.d
    patterns: "*.conf"
    file_type: file
  register: task08
  when: is_remediate

- name: 1.5.1|task09
  replace:
    name: "{{ item.path }}"
    regexp: "^(.*hard\\s+core.*)"
    replace: '# \1'
  with_items:  "{{ task08.files }}"
  register: task09
  when: is_remediate

- name: 1.5.1|Ensure core dumps are restricted
  moveit:
    section: 1.5.1
    description: Ensure core dumps are restricted
    info: |
      <pre class="primary">
      Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:
      </pre>
      <pre class="secondary">
      * hard core 0
      </pre>

      <pre class="primary">
      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      </pre>
      <pre class="secondary">
      fs.suid_dumpable = 0
      </pre>

      <pre class="primary">
      Run the following command to set the active kernel parameter:
      </pre>
      <pre class="secondary">
      # sysctl -w fs.suid_dumpable=0
      </pre>
    cmd_output: |
      <pre class="primary">
      Line ".*hard\\s+core.*" is commented in following path:
      </pre>
      <pre class="secondary">
      {% for result in task09.results %}
      {% if result.changed %}
      {{result.item.path}}
      {% endif %}
      {% endfor %}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'changed' if task09.changed else 'passed'}}"
  when: is_remediate and task09.changed
  tags:
    - scored
    - Level1_Server
    - Level1_Workstation
