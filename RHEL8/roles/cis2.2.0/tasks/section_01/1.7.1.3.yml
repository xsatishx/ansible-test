---
#SB
###############
#    Audit    #
###############


- name: 1.7.1.3|task01
  shell: /usr/bin/grep "^SELINUXTYPE\s*=\s*" /etc/selinux/config
  args:
    warn: no
  check_mode: no
  changed_when: no
  failed_when: no
  register: task01
  when: is_compliance

- name: 1.7.1.3|task02
  set_fact:
    is_valid01: '{{ task01.stdout is regex("^SELINUXTYPE\s*=\s*(targeted|mls)\s*$") }}'
  when: is_compliance

- name: 1.7.1.3|Ensure SELinux policy is configured
  moveit:
    section: 1.7.1.3
    description: Ensure SELinux policy is configured
    info: |
      <pre class="primary">
      Run the following commands and ensure output matches either " targeted " or " mls ":
      </pre>
      <pre class="secondary">
      # grep SELINUXTYPE=targeted /etc/selinux/config
      SELINUXTYPE=targeted
      # sestatus | grep Loaded
      Loaded policy name: targeted
      </pre>
    cmd_output: |
      <pre class="primary">
      <b>Command executed:</b>
      </pre>
      <pre class="secondary">
      grep "^SELINUXTYPE=" /etc/selinux/config
      </pre>
      <pre class="primary">
      <b>Output:</b>
      </pre>
      <pre class="secondary">
      {{ task01.stdout_lines | default(["&lt;no-output&gt;"], true) | join('<br>')}}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'passed' if is_valid01 else 'failed' }}"
  when: is_compliance
  tags:
    - scored
    - Level2_Server
    - Level2_Workstation

- name: 1.7.1.3|task03
  shell: sestatus | /usr/bin/egrep "Loaded"
  args:
    warn: no
  check_mode: no
  changed_when: no
  failed_when: no
  register: task03
  when: is_compliance

- name: 1.7.1.3|task04
  set_fact:
    is_valid02: '{{ task03.stdout is regex("Loaded policy name:\s*(targeted|mls)") }}'
  when: is_compliance

- name: 1.7.1.3|Ensure SELinux policy is configured
  moveit:
    section: 1.7.1.3
    description: Ensure SELinux policy is configured
    info: |
      <pre class="primary">
      Run the following commands and ensure output matches either " targeted " or " mls ":
      </pre>
      <pre class="secondary">
      # grep SELINUXTYPE=targeted /etc/selinux/config
      SELINUXTYPE=targeted
      # sestatus | grep Loaded
      Loaded policy name: targeted
      </pre>
    cmd_output: |
      <pre class="primary">
      <b>Command executed:</b>
      </pre>
      <pre class="secondary">
      sestatus | /usr/bin/egrep "Loaded"
      </pre>
      <pre class="primary">
      <b>Output:</b>
      </pre>
      <pre class="secondary">
      {{ task03.stdout_lines | difference(["failed"]) | default(["&lt;no-output&gt;"], true) | join('<br>')}}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'passed' if is_valid02 else 'failed' }}"
  when: is_compliance
  tags:
    - scored
    - Level2_Server
    - Level2_Workstation

###############
# Remediation #
###############

- name: 1.7.1.3|task05
  selinux:
    configfile: /etc/selinux/config
    policy: "{{ cis_selinux_pol }}"
    state: enforcing
  when: is_remediate
  register: task05

- name: 1.7.1.3|Ensure SELinux policy is configured
  moveit:
    section: 1.7.1.3
    description: Ensure SELinux policy is configured
    info: |
      <pre class="primary">
      Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:
      </pre>
      <pre class="secondary">
      SELINUXTYPE=targeted
      </pre>
    cmd_output: |
      <pre class="primary">
      SELINUXTYPE parameter in the /etc/selinux/config file is set to:
      </pre>
      <pre class="secondary">
      SELINUXTYPE={{ cis_selinux_pol }}
      </pre>
    isRemediate: "{{ is_remediate }}"
    state: "{{ 'changed' if task05.changed else 'passed' }}"
  when: is_remediate
  tags:
    - scored
    - Level2_Server
    - Level2_Workstation